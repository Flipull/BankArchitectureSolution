<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector" kind="class" prot="public">
    <compoundname>Architecture::Core::DependencyService::DependencyInjector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IServiceProvider</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1afdff4c6b9d2c1d9edac410308edbb6c2" prot="private" static="no" mutable="no">
        <type>Dictionary&lt; Type, <ref refid="class_architecture_1_1_core_1_1_dependency_service_1_1_service_descriptor" kindref="compound">ServiceDescriptor</ref> &gt;</type>
        <definition>Dictionary&lt;Type, ServiceDescriptor&gt; Architecture.Core.DependencyService.DependencyInjector.services</definition>
        <argsstring></argsstring>
        <name>services</name>
        <initializer>= new Dictionary&lt;Type, <ref refid="class_architecture_1_1_core_1_1_dependency_service_1_1_service_descriptor" kindref="compound">ServiceDescriptor</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="21" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1aff9aac56a36cd054590f539ac86d4147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Architecture.Core.DependencyService.DependencyInjector.RegisterTransient&lt; T, U &gt;</definition>
        <argsstring>(Factory factory)</argsstring>
        <name>RegisterTransient&lt; T, U &gt;</name>
        <param>
          <type><ref refid="namespace_architecture_1_1_core_1_1_dependency_service_1a53696411b22e2363ba6860e4d963253b" kindref="member">Factory</ref></type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="23" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="23" bodyend="33"/>
        <references refid="namespace_architecture_1_1_core_1_1_dependency_service_1a53696411b22e2363ba6860e4d963253b">Architecture.Core.DependencyService.Factory</references>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1acae355a271b1f525ed2b0dbe5515f47b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Architecture.Core.DependencyService.DependencyInjector.RegisterScoped&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterScoped&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="35" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ac9a2f44965371634142b7cf420740561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Architecture.Core.DependencyService.DependencyInjector.RegisterScoped</definition>
        <argsstring>(object implementation)</argsstring>
        <name>RegisterScoped</name>
        <param>
          <type>object</type>
          <declname>implementation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="40" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ad0e3fe7d12951831588c952524a8980e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Architecture.Core.DependencyService.DependencyInjector.RegisterSingleton&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterSingleton&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="51" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1a58555ab45a16f775e4b81734a7eb5fb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Architecture.Core.DependencyService.DependencyInjector.RegisterSingleton</definition>
        <argsstring>(object implementation)</argsstring>
        <name>RegisterSingleton</name>
        <param>
          <type>object</type>
          <declname>implementation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="55" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1a4c0113e265fa1202a083d1cd526362b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>object Architecture.Core.DependencyService.DependencyInjector.GetService</definition>
        <argsstring>(Type serviceType)</argsstring>
        <name>GetService</name>
        <param>
          <type>Type</type>
          <declname>serviceType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="67" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="67" bodyend="99"/>
        <references refid="class_architecture_1_1_core_1_1_dependency_service_1_1_service_descriptor_1ae37094e50dc12e55098d453a5780c7dd" compoundref="_dependency_injector_8cs" startline="14">Architecture.Core.DependencyService.ServiceDescriptor.Implementation</references>
      </memberdef>
      <memberdef kind="function" id="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ab99e5d0d0fc8e6ee5b38cb9875868466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Architecture.Core.DependencyService.DependencyInjector.GetService&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetService&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="101" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="101" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="72">
        <label>Architecture.Core.DependencyService.DependencyInjector</label>
        <link refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>IServiceProvider</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="74">
        <label>Architecture.Core.DependencyService.DependencyInjector</label>
        <link refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>IServiceProvider</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" line="19" column="1" bodyfile="C:/Users/Mark/source/repos/BankArchitectureSolution/Architecture.Core.DependencyService/DependencyInjector.cs" bodystart="18" bodyend="106"/>
    <listofallmembers>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1a4c0113e265fa1202a083d1cd526362b1" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>GetService</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ab99e5d0d0fc8e6ee5b38cb9875868466" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>GetService&lt; T &gt;</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ac9a2f44965371634142b7cf420740561" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>RegisterScoped</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1acae355a271b1f525ed2b0dbe5515f47b" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>RegisterScoped&lt; T &gt;</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1a58555ab45a16f775e4b81734a7eb5fb4" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>RegisterSingleton</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1ad0e3fe7d12951831588c952524a8980e" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>RegisterSingleton&lt; T &gt;</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1aff9aac56a36cd054590f539ac86d4147" prot="public" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>RegisterTransient&lt; T, U &gt;</name></member>
      <member refid="class_architecture_1_1_core_1_1_dependency_service_1_1_dependency_injector_1afdff4c6b9d2c1d9edac410308edbb6c2" prot="private" virt="non-virtual"><scope>Architecture::Core::DependencyService::DependencyInjector</scope><name>services</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
